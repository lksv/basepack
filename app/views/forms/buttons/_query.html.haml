- classes = 'btn'
- classes << ' btn-danger' if url_params.present? and (url_params.keys != ["f"] or url_params["f"].keys != ["s"]) # "f[s]" is OK
- link_data = { toggle: "ajax-modal", params: url_params, width: "600px", backdrop: "static", "modal-overflow" => true, tabindex: "-1" }

- if Lepidlo::Settings.filters.model_name and can?(:create, Lepidlo::Settings.filters.model_name.constantize)
  = link_to url, class: classes, data: link_data do
    %i.icon-search
    Filtr
  - filters = Lepidlo::Settings.filters.model_name.constantize.active.where(filter_type: resource_class.to_s).to_a
  - if filters.present?
    %button{type: "button", class: classes + ' dropdown-toggle', 'data-toggle' => "dropdown"}
      %span{class: "caret"}
    %ul.dropdown-menu.text-left{role: "menu", 'aria-labelledby' => "dropdownMenu"}
      %li.nav-header
        %small
          %a{href: polymorphic_path([:filters, association_chain, resource_class].flatten), tabindex: '-1'}
            %i.icon-folder-open-alt
            Seznam uložených filtrů
      - filters.each do |filter|
        %li{class: (filter.filter == url_params['ql'] ? 'active' : '')}
          %a{href: polymorphic_path([association_chain, resource_class].flatten, ql: filter.filter), tabindex: '-1'}= filter.name
- else
  = link_to url, class: classes, data: link_data do
    %i.icon-search
    Filtr
